import java.util.Scanner;

/* ------ 이웃한 두 요소의 대소 관계를 비교하여 교환을 반복하는 알고리즘 ----- */
public class BubbleSort {
    static void swap(int[] a, int idx1, int idx2){
        int t = a[idx1];
        a[idx1] = a[idx2];
        a[idx2] = t;
    }

    // 버블 정렬(버전 1)
    /*static void bubbleSort(int[] a, int n){
        for(int i=0; i<n-1; i++){
            for(int j=n-1; j>i; j--)
                if(a[j-1] > a[j])
                    swap(a, j-1, j);
        }
    }*/

    // 버블 정렬(버전 2)
    /*static void bubbleSort(int[] a, int n){
            for(int i=0; i<n-1; i++){
                int exchg = 0;          // 패스를 시작하기 전에 0으로 초기화
                for(int j=n-1; j>i; j--)
                    if(a[j-1] > a[j]){
                        swap(a, j-1, j);
                        exchg++;        // 패스에서 요소를 교환할 때마다 1씩 증가
                    }
                if (exchg == 0) break;
            }
    }*/

    // 버블 정렬(버전 3)
    static void bubbleSort(int[] a, int n){
        int k = 0;              // a[k]보다 앞쪽은 정렬을 마친 상태
        while (k < n-1){
            // 각 패스에서 마지막으로 교환한 두 요소 가운데 오른쪽 요소의 인덱스를 저장하기 위한 변수
            int last = n-1;     // 마지막으로 요소를 교환한 위치
            for(int j=n-1; j>k; j--)
                if(a[j-1] > a[j]){
                    swap(a, j-1, j);
                    last = j;
                }
            k = last;
        }
    }

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        System.out.println("버블 정렬");
        System.out.printf("요솟수 : ");
        int nx = sc.nextInt();
        int[] x = new int[nx];

        for(int i=0; i<nx; i++){
            System.out.printf("x["+i+"] : ");
            x[i] = sc.nextInt();
        }

        bubbleSort(x, nx);

        System.out.println("오름차순으로 정렬했습니다.");
        for(int i=0; i<nx; i++)
            System.out.println("x["+i+"]="+x[i]);
    }
}
